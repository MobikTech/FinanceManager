@model IEnumerable<AccountViewModel>

@{
    // Layout = null;
    ViewData["Title"] = "Available accounts";
}

<!DOCTYPE html>

<html>
@* <head> *@
@*     $1$ <title>Available accounts</title> #1# *@
@* </head> *@
<body>
<div>
    <p>@Html.ActionLink("Make transaction", "Make", "Transaction")</p>
    <h3>Accounts</h3>
    <p>@Html.ActionLink("Add new account", "Create")</p>
    <table>
        <tr>
            <td>
                <p>Number</p>
            </td>
            <td>
                <p>Count</p>
            </td>
            <td></td>
        </tr>
        @foreach (AccountViewModel account in Model)
        {
            <tr>
                <td>
                    <p>@account.Number</p>
                </td>
                <td>
                    <p>@account.Count</p>
                </td>
                <td>
                    <p>
                        @* @Html.ActionLink("Update", "EditBook", new {id = b.Id}) | *@
                        @* @Html.ActionLink("Delete", "Remove", new { model = account }) *@
                        @* @Html.RouteLink("Delete", new { controller = "Account", action = "Remove", model = account }) *@
                        @* @using (Html.BeginForm("Remove", "Account", FormMethod.Post, new { Number=account.Number, Count=account.Count })) *@
                        @using (Html.BeginForm("Remove", "Account", FormMethod.Post))
                        {
                            // @Html.HiddenFor(model => account) // remove the id attribute to prevent invalid html
                            @Html.HiddenFor(m => account)
                            <input type="submit" value="Delete"/>
                        }

                        @Html.ActionLink("Details", "Details", "Account", account)
                    </p>
                </td>
            </tr>
        }
    </table>
</div>
</body>
</html>